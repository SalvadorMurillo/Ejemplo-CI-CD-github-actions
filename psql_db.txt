-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.attitudes (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  student_id uuid NOT NULL,
  observed_by uuid NOT NULL,
  attitude_type character varying NOT NULL CHECK (attitude_type::text = ANY (ARRAY['positive'::character varying, 'negative'::character varying]::text[])),
  title character varying NOT NULL,
  description text NOT NULL,
  context text,
  frequency character varying,
  intervention_applied text,
  observation_date date NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  created_by uuid,
  CONSTRAINT attitudes_pkey PRIMARY KEY (id),
  CONSTRAINT attitudes_student_id_fkey FOREIGN KEY (student_id) REFERENCES public.students(id),
  CONSTRAINT attitudes_observed_by_fkey FOREIGN KEY (observed_by) REFERENCES public.users(id),
  CONSTRAINT attitudes_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id)
);
CREATE TABLE public.audit_logs (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  table_name character varying NOT NULL,
  record_id uuid NOT NULL,
  action character varying NOT NULL CHECK (action::text = ANY (ARRAY['INSERT'::character varying, 'UPDATE'::character varying, 'DELETE'::character varying]::text[])),
  old_values jsonb,
  new_values jsonb,
  changed_fields ARRAY,
  user_id uuid,
  user_email character varying,
  ip_address inet,
  user_agent text,
  reason text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT audit_logs_pkey PRIMARY KEY (id)
);
CREATE TABLE public.bap_records (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  student_id uuid NOT NULL,
  type character varying NOT NULL CHECK (type::text = ANY (ARRAY['learning'::character varying, 'behavioral'::character varying, 'social'::character varying, 'emotional'::character varying, 'physical'::character varying, 'intellectual'::character varying, 'sensory'::character varying]::text[])),
  title character varying NOT NULL,
  description text NOT NULL,
  detection_date date NOT NULL,
  detected_by uuid NOT NULL,
  intervention_strategies text,
  current_status character varying DEFAULT 'active'::character varying,
  progress_notes jsonb DEFAULT '[]'::jsonb,
  documents jsonb DEFAULT '[]'::jsonb,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  created_by uuid,
  updated_by uuid,
  CONSTRAINT bap_records_pkey PRIMARY KEY (id),
  CONSTRAINT bap_records_student_id_fkey FOREIGN KEY (student_id) REFERENCES public.students(id),
  CONSTRAINT bap_records_detected_by_fkey FOREIGN KEY (detected_by) REFERENCES public.users(id),
  CONSTRAINT bap_records_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id),
  CONSTRAINT bap_records_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES public.users(id)
);
CREATE TABLE public.conduct_reports (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  student_id uuid NOT NULL,
  reporter_id uuid NOT NULL,
  type character varying NOT NULL CHECK (type::text = ANY (ARRAY['positive'::character varying, 'negative'::character varying]::text[])),
  severity character varying CHECK (severity::text = ANY (ARRAY['mild'::character varying, 'moderate'::character varying, 'severe'::character varying, 'verySevere'::character varying]::text[])),
  title character varying NOT NULL,
  description text NOT NULL,
  context text,
  witnesses text,
  immediate_actions text,
  parent_agreement text,
  parent_signature_url text,
  agreement_date date,
  follow_up_date date,
  attachments jsonb DEFAULT '[]'::jsonb,
  incident_date timestamp with time zone NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  created_by uuid,
  updated_by uuid,
  CONSTRAINT conduct_reports_pkey PRIMARY KEY (id),
  CONSTRAINT conduct_reports_student_id_fkey FOREIGN KEY (student_id) REFERENCES public.students(id),
  CONSTRAINT conduct_reports_reporter_id_fkey FOREIGN KEY (reporter_id) REFERENCES public.users(id),
  CONSTRAINT conduct_reports_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id),
  CONSTRAINT conduct_reports_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES public.users(id)
);
CREATE TABLE public.final_reports (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  student_id uuid NOT NULL,
  school_year character varying NOT NULL,
  general_summary text,
  conduct_summary text,
  total_positive_reports integer DEFAULT 0,
  total_negative_reports integer DEFAULT 0,
  highlighted_incidents jsonb,
  bap_summary text,
  medical_summary text,
  active_conditions jsonb DEFAULT '[]'::jsonb,
  predominant_attitudes text,
  recommendations text,
  areas_of_opportunity text,
  identified_strengths text,
  conduct_classification character varying CHECK (conduct_classification::text = ANY (ARRAY['excellent'::character varying, 'good'::character varying, 'regular'::character varying, 'needs_attention'::character varying]::text[])),
  generated_by uuid NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  active_allergies ARRAY,
  severity_breakdown jsonb DEFAULT '{}'::jsonb,
  total_active_bap integer DEFAULT 0,
  bap_type_breakdown jsonb DEFAULT '{}'::jsonb,
  bap_evolution_summary jsonb DEFAULT '[]'::jsonb,
  blood_type character varying,
  current_medications jsonb DEFAULT '[]'::jsonb,
  positive_attitudes jsonb DEFAULT '[]'::jsonb,
  negative_attitudes jsonb DEFAULT '[]'::jsonb,
  frequency_analysis jsonb DEFAULT '{}'::jsonb,
  student_full_name character varying,
  student_curp character varying,
  student_institutional_id character varying,
  student_enrollment character varying,
  student_grade character varying,
  student_group character varying,
  student_profile_image_url text,
  student_birth_date date,
  student_sexo character varying,
  student_tutor character varying,
  student_calle character varying,
  student_numero character varying,
  student_colonia character varying,
  student_localidad character varying,
  student_municipio character varying,
  student_codigo_postal character varying,
  student_telefono character varying,
  student_peso numeric,
  student_estatura numeric,
  student_indice_robustez numeric,
  situacion_socioeconomica character varying,
  conducta_alumno text,
  generation_date timestamp with time zone DEFAULT now(),
  pdf_url text,
  ficha_pedagogica_pdf_url text,
  CONSTRAINT final_reports_pkey PRIMARY KEY (id),
  CONSTRAINT final_reports_student_id_fkey FOREIGN KEY (student_id) REFERENCES public.students(id)
);
CREATE TABLE public.guardians (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  student_id uuid NOT NULL,
  full_name character varying NOT NULL,
  relationship character varying NOT NULL,
  phone character varying,
  emergency_phone character varying,
  email character varying,
  address text,
  is_primary boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT guardians_pkey PRIMARY KEY (id),
  CONSTRAINT guardians_student_id_fkey FOREIGN KEY (student_id) REFERENCES public.students(id)
);
CREATE TABLE public.medical_records (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  student_id uuid NOT NULL,
  blood_type character varying CHECK (blood_type::text = ANY (ARRAY['aPositive'::character varying, 'aNegative'::character varying, 'bPositive'::character varying, 'bNegative'::character varying, 'abPositive'::character varying, 'abNegative'::character varying, 'oPositive'::character varying, 'oNegative'::character varying]::text[])),
  allergies text,
  chronic_conditions text,
  current_medications text,
  emergency_contact_name character varying,
  emergency_contact_phone character varying,
  medical_insurance text,
  diagnoses jsonb DEFAULT '[]'::jsonb,
  medical_events jsonb DEFAULT '[]'::jsonb,
  documents jsonb DEFAULT '[]'::jsonb,
  observations text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  created_by uuid,
  updated_by uuid,
  CONSTRAINT medical_records_pkey PRIMARY KEY (id),
  CONSTRAINT medical_records_student_id_fkey FOREIGN KEY (student_id) REFERENCES public.students(id)
);
CREATE TABLE public.parent_agreements (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  conduct_report_id uuid NOT NULL,
  agreement_description text NOT NULL,
  specific_commitments ARRAY DEFAULT '{}'::text[],
  signature_image_url text,
  agreement_date date NOT NULL,
  follow_up_date date,
  guardian_name character varying,
  guardian_relationship character varying,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT parent_agreements_pkey PRIMARY KEY (id),
  CONSTRAINT parent_agreements_conduct_report_id_fkey FOREIGN KEY (conduct_report_id) REFERENCES public.conduct_reports(id)
);
CREATE TABLE public.students (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  curp character varying NOT NULL UNIQUE,
  institutional_id character varying NOT NULL UNIQUE,
  enrollment character varying NOT NULL UNIQUE,
  first_name character varying NOT NULL,
  last_name character varying NOT NULL,
  birth_date date NOT NULL,
  current_school_year character varying NOT NULL,
  grade character varying NOT NULL CHECK (grade::text = ANY (ARRAY['primero'::character varying::text, 'segundo'::character varying::text, 'tercero'::character varying::text])),
  group character varying NOT NULL,
  profile_image_url text,
  positive_reports_count integer DEFAULT 0,
  negative_reports_count integer DEFAULT 0,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  created_by uuid,
  updated_by uuid,
  cct character varying,
  turno character varying,
  sexo character varying,
  numero_lista integer,
  grupo_taller character varying,
  numero_lista_taller integer,
  situacion character varying,
  repetidor boolean DEFAULT false,
  fecha_alta date,
  fecha_baja date,
  motivo_baja text,
  discapacidad character varying,
  indigena boolean DEFAULT false,
  nee character varying,
  usaer boolean DEFAULT false,
  beca character varying,
  calle character varying,
  numero character varying,
  colonia character varying,
  localidad character varying,
  municipio character varying,
  telefono character varying,
  codigo_postal character varying,
  tutor character varying,
  nacionalidad character varying DEFAULT 'Mexicana'::character varying,
  primaria_procedencia character varying,
  promedio_primaria numeric,
  peso numeric,
  estatura numeric,
  uniforme_a character varying,
  uniforme_b character varying,
  padre character varying,
  fecha_padre date,
  curp_padre character varying,
  estudios_padre character varying,
  madre character varying,
  fecha_madre date,
  curp_madre character varying,
  estudios_madre character varying,
  middle_name character varying,
  profile_image_url_grade1 text,
  profile_image_url_grade2 text,
  profile_image_url_grade3 text,
  CONSTRAINT students_pkey PRIMARY KEY (id)
);
CREATE TABLE public.users (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  email character varying NOT NULL UNIQUE,
  first_name character varying NOT NULL,
  last_name character varying NOT NULL,
  role character varying NOT NULL CHECK (role::text = ANY (ARRAY['admin'::character varying, 'director'::character varying, 'subdirector'::character varying, 'socialWorker'::character varying, 'prefect'::character varying, 'counselor'::character varying, 'usaer'::character varying, 'academicCoordinator'::character varying, 'medico'::character varying, 'docente'::character varying]::text[])),
  phone_number character varying,
  is_active boolean DEFAULT true,
  profile_image_url text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  created_by uuid,
  updated_by uuid,
  CONSTRAINT users_pkey PRIMARY KEY (id),
  CONSTRAINT users_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id),
  CONSTRAINT users_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES public.users(id)
);
// storage buckets:
[
  {
    "id": "profile-images",
    "name": "profile-images",
    "owner": null,
    "created_at": "2025-09-30 23:23:59.721649+00",
    "updated_at": "2025-09-30 23:23:59.721649+00",
    "public": true,
    "avif_autodetection": false,
    "file_size_limit": null,
    "allowed_mime_types": null,
    "owner_id": null,
    "type": "STANDARD"
  },
  {
    "id": "documents",
    "name": "documents",
    "owner": null,
    "created_at": "2025-09-30 23:23:59.721649+00",
    "updated_at": "2025-09-30 23:23:59.721649+00",
    "public": false,
    "avif_autodetection": false,
    "file_size_limit": null,
    "allowed_mime_types": null,
    "owner_id": null,
    "type": "STANDARD"
  },
  {
    "id": "signatures",
    "name": "signatures",
    "owner": null,
    "created_at": "2025-09-30 23:23:59.721649+00",
    "updated_at": "2025-09-30 23:23:59.721649+00",
    "public": false,
    "avif_autodetection": false,
    "file_size_limit": null,
    "allowed_mime_types": null,
    "owner_id": null,
    "type": "STANDARD"
  },
  {
    "id": "report-attachments",
    "name": "report-attachments",
    "owner": null,
    "created_at": "2025-09-30 23:23:59.721649+00",
    "updated_at": "2025-09-30 23:23:59.721649+00",
    "public": false,
    "avif_autodetection": false,
    "file_size_limit": null,
    "allowed_mime_types": null,
    "owner_id": null,
    "type": "STANDARD"
  },
  {
    "id": "student-profile-images",
    "name": "student-profile-images",
    "owner": null,
    "created_at": "2025-10-05 19:28:34.314071+00",
    "updated_at": "2025-10-05 19:28:34.314071+00",
    "public": true,
    "avif_autodetection": false,
    "file_size_limit": 5242880,
    "allowed_mime_types": [
      "image/jpeg",
      "image/png",
      "image/webp",
      "image/gif"
    ],
    "owner_id": null,
    "type": "STANDARD"
  },
  {
    "id": "final-reports",
    "name": "final-reports",
    "owner": null,
    "created_at": "2025-10-10 20:01:44.957202+00",
    "updated_at": "2025-10-10 20:01:44.957202+00",
    "public": false,
    "avif_autodetection": false,
    "file_size_limit": null,
    "allowed_mime_types": null,
    "owner_id": null,
    "type": "STANDARD"
  }
]
//storage policies:
[
  {
    "policy_name": "Anyone can view profile images",
    "table_name": "objects",
    "command": "SELECT",
    "using_expression": "(bucket_id = 'profile-images'::text)",
    "with_check_expression": null
  },
  {
    "policy_name": "Authenticated users can upload profile images",
    "table_name": "objects",
    "command": "INSERT",
    "using_expression": null,
    "with_check_expression": "((bucket_id = 'profile-images'::text) AND (role() = 'authenticated'::text))"
  },
  {
    "policy_name": "Users can update their own profile images",
    "table_name": "objects",
    "command": "UPDATE",
    "using_expression": "((bucket_id = 'profile-images'::text) AND (uid() = owner))",
    "with_check_expression": null
  },
  {
    "policy_name": "Authenticated users can view documents",
    "table_name": "objects",
    "command": "SELECT",
    "using_expression": "((bucket_id = 'documents'::text) AND (role() = 'authenticated'::text))",
    "with_check_expression": null
  },
  {
    "policy_name": "Authorized users can upload documents",
    "table_name": "objects",
    "command": "INSERT",
    "using_expression": null,
    "with_check_expression": "((bucket_id = 'documents'::text) AND (get_my_role() = ANY (ARRAY['admin'::text, 'director'::text, 'subdirector'::text, 'socialWorker'::text, 'prefect'::text, 'counselor'::text, 'usaer'::text, 'medico'::text])))"
  },
  {
    "policy_name": "Authenticated users can view signatures",
    "table_name": "objects",
    "command": "SELECT",
    "using_expression": "((bucket_id = 'signatures'::text) AND (role() = 'authenticated'::text))",
    "with_check_expression": null
  },
  {
    "policy_name": "Authorized users can upload signatures",
    "table_name": "objects",
    "command": "INSERT",
    "using_expression": null,
    "with_check_expression": "((bucket_id = 'signatures'::text) AND (get_my_role() = ANY (ARRAY['admin'::text, 'director'::text, 'subdirector'::text, 'socialWorker'::text, 'prefect'::text, 'counselor'::text, 'usaer'::text, 'medico'::text])))"
  },
  {
    "policy_name": "Authenticated users can view report attachments",
    "table_name": "objects",
    "command": "SELECT",
    "using_expression": "((bucket_id = 'report-attachments'::text) AND (role() = 'authenticated'::text))",
    "with_check_expression": null
  },
  {
    "policy_name": "Authorized users can upload report attachments",
    "table_name": "objects",
    "command": "INSERT",
    "using_expression": null,
    "with_check_expression": "((bucket_id = 'report-attachments'::text) AND (get_my_role() = ANY (ARRAY['admin'::text, 'director'::text, 'subdirector'::text, 'socialWorker'::text, 'prefect'::text, 'counselor'::text, 'usaer'::text, 'medico'::text])))"
  },
  {
    "policy_name": "Allow authenticated users to upload student profile images",
    "table_name": "objects",
    "command": "INSERT",
    "using_expression": null,
    "with_check_expression": "((role() = 'authenticated'::text) AND (bucket_id = 'student-profile-images'::text) AND ((storage.foldername(name))[1] = 'student-profiles'::text))"
  },
  {
    "policy_name": "Allow authenticated users to view student profile images",
    "table_name": "objects",
    "command": "SELECT",
    "using_expression": "((role() = 'authenticated'::text) AND (bucket_id = 'student-profile-images'::text))",
    "with_check_expression": null
  },
  {
    "policy_name": "Allow users to update student profile images",
    "table_name": "objects",
    "command": "UPDATE",
    "using_expression": "((role() = 'authenticated'::text) AND (bucket_id = 'student-profile-images'::text) AND ((EXISTS ( SELECT 1\n   FROM users\n  WHERE ((users.id = uid()) AND ((users.role)::text = ANY ((ARRAY['admin'::character varying, 'principal'::character varying])::text[]))))) OR ((storage.foldername(name))[1] = 'student-profiles'::text)))",
    "with_check_expression": null
  },
  {
    "policy_name": "Allow users to delete student profile images",
    "table_name": "objects",
    "command": "DELETE",
    "using_expression": "((role() = 'authenticated'::text) AND (bucket_id = 'student-profile-images'::text) AND ((EXISTS ( SELECT 1\n   FROM users\n  WHERE ((users.id = uid()) AND ((users.role)::text = ANY ((ARRAY['admin'::character varying, 'principal'::character varying])::text[]))))) OR ((storage.foldername(name))[1] = 'student-profiles'::text)))",
    "with_check_expression": null
  },
  {
    "policy_name": "Authenticated users can upload student profile images",
    "table_name": "objects",
    "command": "INSERT",
    "using_expression": null,
    "with_check_expression": "(bucket_id = 'student-profile-images'::text)"
  },
  {
    "policy_name": "Anyone can view student profile images",
    "table_name": "objects",
    "command": "SELECT",
    "using_expression": "(bucket_id = 'student-profile-images'::text)",
    "with_check_expression": null
  },
  {
    "policy_name": "Authenticated users can update student profile images",
    "table_name": "objects",
    "command": "UPDATE",
    "using_expression": "(bucket_id = 'student-profile-images'::text)",
    "with_check_expression": "(bucket_id = 'student-profile-images'::text)"
  },
  {
    "policy_name": "Authenticated users can delete student profile images",
    "table_name": "objects",
    "command": "DELETE",
    "using_expression": "(bucket_id = 'student-profile-images'::text)",
    "with_check_expression": null
  },
  {
    "policy_name": "Authenticated users can upload final reports",
    "table_name": "objects",
    "command": "INSERT",
    "using_expression": null,
    "with_check_expression": "((bucket_id = 'final-reports'::text) AND (role() = 'authenticated'::text))"
  }
]